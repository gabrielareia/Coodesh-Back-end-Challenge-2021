// <auto-generated />
using System;
using CoodeshPharmaIncAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoodeshPharmaIncAPI.Database.Migrations
{
    [DbContext(typeof(PharmaContext))]
    partial class PharmaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoodeshPharmaIncAPI.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("CoodeshPharmaIncAPI.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("TimeZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimeZoneId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("CoodeshPharmaIncAPI.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UUID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("CoodeshPharmaIncAPI.Models.Name", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("First")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Last")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Name");
                });

            modelBuilder.Entity("CoodeshPharmaIncAPI.Models.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("CoodeshPharmaIncAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Imported_T")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("imported_t")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("LoginId")
                        .HasColumnType("int");

                    b.Property<int?>("NameId")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("PictureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Registered")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("ContactId")
                        .IsUnique()
                        .HasFilter("[ContactId] IS NOT NULL");

                    b.HasIndex("LocationId")
                        .IsUnique()
                        .HasFilter("[LocationId] IS NOT NULL");

                    b.HasIndex("LoginId")
                        .IsUnique()
                        .HasFilter("[LoginId] IS NOT NULL");

                    b.HasIndex("NameId")
                        .IsUnique()
                        .HasFilter("[NameId] IS NOT NULL");

                    b.HasIndex("PictureId")
                        .IsUnique()
                        .HasFilter("[PictureId] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CoodeshPharmaIncAPI.Models.UserTimeZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Offset")
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("TimeZone");
                });

            modelBuilder.Entity("CoodeshPharmaIncAPI.Models.Location", b =>
                {
                    b.HasOne("CoodeshPharmaIncAPI.Models.UserTimeZone", "TimeZone")
                        .WithMany()
                        .HasForeignKey("TimeZoneId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("TimeZone");
                });

            modelBuilder.Entity("CoodeshPharmaIncAPI.Models.User", b =>
                {
                    b.HasOne("CoodeshPharmaIncAPI.Models.Contact", "Contact")
                        .WithOne()
                        .HasForeignKey("CoodeshPharmaIncAPI.Models.User", "ContactId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CoodeshPharmaIncAPI.Models.Location", "Location")
                        .WithOne()
                        .HasForeignKey("CoodeshPharmaIncAPI.Models.User", "LocationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CoodeshPharmaIncAPI.Models.Login", "Login")
                        .WithOne()
                        .HasForeignKey("CoodeshPharmaIncAPI.Models.User", "LoginId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CoodeshPharmaIncAPI.Models.Name", "Name")
                        .WithOne()
                        .HasForeignKey("CoodeshPharmaIncAPI.Models.User", "NameId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CoodeshPharmaIncAPI.Models.Picture", "Picture")
                        .WithOne()
                        .HasForeignKey("CoodeshPharmaIncAPI.Models.User", "PictureId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Contact");

                    b.Navigation("Location");

                    b.Navigation("Login");

                    b.Navigation("Name");

                    b.Navigation("Picture");
                });
#pragma warning restore 612, 618
        }
    }
}
